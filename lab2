#include <iostream>
#include <unordered_map>
using namespace std;

bool areIsomorphic(string str1, string str2)
{
    // Проверяем, равны ли строки
    if (str1.size() != str2.size()) // O(1) + O(1) + O(1)
        return false;

    unordered_map<char, char> map1; // O(1)
  
    for (int i = 0; i < str1.size(); i++) { // O(N): O(1) + O(1) + O(1) + O(1) + O(1)
        
        // Проверяем соответствие в отображении
        if (map1.find(str1[i]) == map1.end()) { // O(1) + O(1) + O(1) + O(1)
            map1[str1[i]] = str2[i]; // O(1) + O(1) + O(1) + O(1)
            map1[str2[i]] = str1[i]; // O(1) + O(1) + O(1) + O(1)
        }
        else if (map1[str1[i]] != str2[i]) { // O(1) + O(1) + O(1) + O(1)
            return false;
        }
    }
    
    return true;
}

int main()
{
    cout << (areIsomorphic("egg", "add") ? "True" : "False") << endl;
    return 0;
}
