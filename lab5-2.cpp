#include <iostream>
#include <vector>
#include <algorithm> //для swap:нужен для обмена местами двух элементов 
using namespace std;

void combSort(vector<int>& arr) {//объявляет ф-цию combSort, принимает ссылку на вектор целых чисел
                                 //ссылка позволяет изменять оригинальный вектор, переданный в функцию
    int n = arr.size();//переменная n=размер массива-->количество элементов, которые нужно отсортировать
    float shrink = 1.247;// коэффициент, на который будет уменьшаться шаг (gap) при каждой итерации
    int gap = n;//начальный шаг.В первой итерации алгоритм будет сравнивать элементы, находящиеся на расстоянии n д. от д.
    bool sorted = false;//переменная для отслеживания сосотояния\\массив изначально не отсортирован 

    while (!sorted) {//Начинаем цикл, который будет выполняться до тех пор, пока массив не будет отсортирован
        // Уменьшаем шаг
        gap = static_cast<int>(gap / shrink);//↓ значение gap, деля его на shrink. Используется static_cast<int>, чтобы преобразовать значение в целое число
        if (gap < 1) {//если при этом шаг стал меньше 1,то = 1,тк мин. шаг при сравнении должен быть = 1
            gap = 1; 
        }

        sorted = true; // Предполагаем, что массив отсортирован

        // Сравниваем и меняем местами элементы с текущим шагом
        for (int i = 0; i + gap < n; i++) {//цикл, который будет выполняться до тех пор, пока i + gap меньше n
                                           //(проходит по индексам от 0 до n-gap)
            if (arr[i] > arr[i + gap]) {//если элементы расположены "неправильно" (при x<y есть x>y),вызывается swap,меняющая их местами
                swap(arr[i], arr[i + gap]);
                sorted = false; //массив еще не отсортирован, и цикл должен продолжаться

            }
        }
    }
}

int main() {
    vector<int> array = {214, 6214, 6414, 9114, 014, 114, 8714, 9614, 2614, 4114, 7714, 514, 2714, 10714, 6914, 9214, 7714};
    
    cout << "Исходный массив: ";
    for (int num : array) {
        cout << num << " ";
    }
    cout << endl;

    combSort(array);

    cout << "Отсортированный массив: ";
    for (int num : array) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
