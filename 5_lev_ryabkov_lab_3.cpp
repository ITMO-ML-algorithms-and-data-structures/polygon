#include <iostream>
#include <vector>
#include <random>
#include <fstream>
#include <algorithm>
using namespace std;


int main()
{
    int n = 100000000; // O(1) - выделение памяти и присваивание значения

    ifstream infile("dataset.txt"); // O(1) - открытие файла
    vector<int> arr(n);             // O(N) - выделение памяти для вектора размером N
    int value;                      // O(1) - выделение памяти для переменной

    // Чтение данных из файла и запись в массив
    for (int u = 0; u < n; ++u)
    {
        infile >> arr[u]; // O(1) - чтение элемента и запись в массив
    }

    infile.close(); // O(1) - закрытие файла
    // Сложность цикла: O(N) - в худшем случае, цикл выполняется N раз

    random_device rd; // O(1) - создание генератора случайных чисел
    mt19937 gen(rd()); // O(1) - инициализация генератора случайных чисел

    // Перемешивание элементов массива
    for (int i = n - 1; i >= 0; --i)
    {
        uniform_int_distribution<int> dist(0, i); // O(1) - создание распределения
        int j = dist(gen); // O(1) - генерация случайного индекса
        swap(arr[i], arr[j]); // O(1) - перестановка двух элементов
    }
    // Сложность цикла: O(N) - в худшем случае, цикл выполняется N раз

    // Вывод элементов массива на экран
    for (int i = 0; i < n; ++i)
    {
        cout << arr[i] << " "; // O(1) - вывод элемента массива
    }
    // Сложность цикла: O(N) - каждый элемент выводится один раз

    cout << '\n'; // O(1) - переход на новую строку
    return 0; // O(1) - завершение программы
}

// Сложность алгоритма составляет:
// O(N) - в худшем случае для каждого этапа:
//     - Чтение данных из файла: O(N)
//     - Перемешивание массива: O(N)
//     - Вывод массива: O(N)
// Общая сложность программы: O(N) + O(N) + O(N) = O(N).