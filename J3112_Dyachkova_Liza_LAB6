#include <iostream>
#include <stack>
#include <string>
using namespace std;

class Solution {
public:
    int longestValidParentheses(string s) {
        stack<int> stakk;
        stakk.push(-1); 
        int maxllen = 0;

        for (int i = 0; i < s.length(); ++i) {
            if (s[i] == '(') {
                stakk.push(i); 
            } else {
                stakk.pop(); 
                if (stakk.empty()) {
                    stakk.push(i);
                } else {
                    maxllen = max(maxllen, i - stakk.top());
                }
            }
        }
        return maxllen; 
    }
};

int main() {
    Solution sol;
    
   
    string s1 = "(()";
    cout << "The longest valid parentheses : " << sol.longestValidParentheses(s1) << endl; 
    
    
    string s2 = ")()())";
    cout << "The longest valid parentheses : " << sol.longestValidParentheses(s2) << endl; 
    
    
    string s3 = "";
    cout << "The longest valid parentheses : " << sol.longestValidParentheses(s3) << endl; 

    return 0;
}
