#include <iostream>                // Подключает библиотеку для ввода и вывода
#include <vector>                 // Подключает библиотеку для работы с векторами
#include <unordered_map>          // Подключает библиотеку для использования хэш-таблиц
#include <string>                 // Подключает библиотеку для работы со строками

// Функция для подсчета вхождений строк в массиве и замены их на количество вхождений
void Count_Enters(std::vector<std::string>& arr) {
    // Создаем хэш-таблицу для хранения частоты появления каждой строки
    std::unordered_map<std::string, int> hesh_enter;

    // Проходим по каждому значению в массиве
    for (auto& value : arr) {
        hesh_enter[value]++;        // Увеличиваем счетчик для текущего значения
    }

    // Замена значений в исходном массиве на количество их вхождений
    for (int i = 0; i < arr.size(); i++) {
        arr[i] = std::to_string(hesh_enter[arr[i]]); // Преобразуем количество вхождений в строку и сохраняем в оригинальном массиве
    }
}

int main() {
    // Инициализируем вектор строк с некоторыми значениями
    std::vector<std::string> arr = { "Orange", "Red", "Green", "Orange", "Orange", "Red"};
    
    // Вызываем функцию для подсчета вхождений
    Count_Enters(arr);

    // Начинаем вывод результата в формате массива
    std::cout << "[";
    // Проходим по элементам результирующего массива
    for (int i = 0; i < arr.size(); i++) {
        std::cout << arr[i];        // Выводим текущий элемент
        if (i < arr.size() - 1)     // Если это не последний элемент
            std::cout << ", ";       // Выводим запятую для разделения значений
    }
    std::cout << "]";               // Закрываем скобку, завершая вывод

    return 0;                       // Завершаем программу, возвращая 0 для обозначения успешного завершения
}
