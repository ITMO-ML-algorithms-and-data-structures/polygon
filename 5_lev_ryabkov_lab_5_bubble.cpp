#include <iostream>
#include <vector>
#include <fstream>
using namespace std;

void bubbleSort(vector<int>& arr) {
    size_t n = arr.size();
    // n: 8 байт (размер переменной size_t) // O(1) для вычисления размера вектора
    for (size_t i = 0; i < n; ++i) // Внешний цикл: 8 байт (переменная i) // O(n)
    {
        for (size_t j = 0; j < n - 1 - i; ++j) // Внутренний цикл: 8 байт (переменная j) // O(n - i), в среднем O(n)
        {
            if (arr[j] > arr[j + 1]) // 2 обращения по индексу + 1 сравнение // O(1)
            {
                swap(arr[j], arr[j + 1]); // 2 обращения по индексу + 3 присваивания // O(1)
            }
        }
    }
    // Итог по памяти: 8 байт (n) + 8 байт (i) + 8 байт (j) = 24 байта
    // Итоговая сложность: O(n^2)
}

int main() {
    int n = 1000;
    // n: 4 байта // O(1)

    ifstream infile("/Users/levr/всякое/pythonProject/dataset_1.txt");
    // infile: 152 байта (стандартный размер ifstream) // O(1)

    vector<int> arr(n);
    // arr: 24 байта (вектор) + 4 * n байт (1000 элементов по 4 байта каждый) = 4024 байта // O(n)

    for (int u = 0; u < n; ++u) // u: 4 байта // O(n)
    {
        infile >> arr[u]; // Обращение по индексу: 4 байта // O(1) для каждой итерации
        arr[u] = (arr[u] % 1000); // Вычисление остатка: 4 байта // O(1) для каждой итерации
    }
    // Итог по памяти внутри цикла: 4 байта (u) + 4 байта (arr[u]) = 8 байт
    // Итоговая сложность цикла: O(n)

    infile.close(); // Закрытие файла // O(1)
    bubbleSort(arr); // Сортировка массива // O(n^2)

    for (int num : arr) { // num: 4 байта // O(n)
        cout << num << " "; // Вывод числа // O(1) для каждой итерации
    }
    cout << '\n';

    return 0;
    // Итог по памяти: 4 байта (n) + 152 байта (infile) + 4024 байта (arr) + 8 байт (u) + 4 байта (num) = 4192 байта
    // Итоговая сложность: O(n^2) (доминирующая часть — сортировка)
}

// Подсчет памяти:
// 1. n: 4 байта
// 2. ifstream infile: 152 байт
// 3. vector arr: 24 байта (вектор) + 4 * n байт (1000 элементов по 4 байта каждый) = 4024 байта
// 4. Внутренние переменные:
//    - u: 4 байта
//    - num: 4 байта
// 5. В функции bubbleSort:
//    - n: 8 байт
//    - i, j: 8 + 8 = 16 байт
// Общая память: 4192 байта

// Подсчет сложности:
// 1. В main:
//    - Чтение файла: O(n)
//    - Присвоение остатка: O(n)
//    - Вызов bubbleSort: O(n^2)
//    - Вывод массива: O(n)
// 2. В функции bubbleSort:
//    - Внешний цикл: O(n)
//    - Внутренний цикл: O(n - i), в сумме O(n^2)
// Итоговая сложность: O(n^2)